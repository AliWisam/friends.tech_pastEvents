{
    "address": "0x8920Df4215934E5f6c8935F0049E9b9d8dDF3656",
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "trader",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "subject",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "isBuy",
            "type": "bool"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "shareAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "ethAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "protocolEthAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "subjectEthAmount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "supply",
            "type": "uint256"
          }
        ],
        "name": "Trade",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "buyShares",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getBuyPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getBuyPriceAfterFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "supply",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getSellPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getSellPriceAfterFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "protocolFeeDestination",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "protocolFeePercent",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sharesSubject",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "sellShares",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_feeDestination",
            "type": "address"
          }
        ],
        "name": "setFeeDestination",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_feePercent",
            "type": "uint256"
          }
        ],
        "name": "setProtocolFeePercent",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_feePercent",
            "type": "uint256"
          }
        ],
        "name": "setSubjectFeePercent",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "sharesBalance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "sharesSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "subjectFeePercent",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "transactionHash": "0x616edbf485d72104c22baaf6397ddff2cee87cb6f2a62eea81792537c090fd17",
    "receipt": {
      "to": null,
      "from": "0x5F185Da55f7BBD9217E3b3CeE06b180721FA6d34",
      "contractAddress": "0x8920Df4215934E5f6c8935F0049E9b9d8dDF3656",
      "transactionIndex": 3,
      "gasUsed": "964866",
      "logsBloom": "0x
      "blockHash": "0xcaccc5c4089d3726550ce1c513ef2600fa5dadb01009182e12661d9c7b9adf10",
      "transactionHash": "0x616edbf485d72104c22baaf6397ddff2cee87cb6f2a62eea81792537c090fd17",
      "logs": [
        {
          "transactionIndex": 3,
          "blockNumber": 10651693,
          "transactionHash": "0x616edbf485d72104c22baaf6397ddff2cee87cb6f2a62eea81792537c090fd17",
          "address": "0x8920Df4215934E5f6c8935F0049E9b9d8dDF3656",
          "topics": [
            "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000005f185da55f7bbd9217e3b3cee06b180721fa6d34"
          ],
          "data": "0x",
          "logIndex": 2,
          "blockHash": "0xcaccc5c4089d3726550ce1c513ef2600fa5dadb01009182e12661d9c7b9adf10"
        }
      ],
      "blockNumber": 10651693,
      "cumulativeGasUsed": "1088816",
      "status": 1,
      "byzantium": true
    },
    "args": [],
    "numDeployments": 1,
    "solcInputHash": "89a3c0be2f237e2cb1adf024ee6fb2a6",
    "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/FriendtechSharesV1.sol\":\"FriendtechSharesV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/protocol/FriendtechSharesV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.2 <0.9.0;\\n\\n// source: https://basescan.org/address/0xcf205808ed36593aa40a44f10c7f7c2f67d4a4d4\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n// TODO: Events, final pricing model,\\n\\ncontract FriendtechSharesV1 is Ownable {\\n\\taddress public protocolFeeDestination;\\n\\tuint256 public protocolFeePercent;\\n\\tuint256 public subjectFeePercent;\\n\\n\\tevent Trade(address trader, address subject, bool isBuy, uint256 shareAmount, uint256 ethAmount, uint256 protocolEthAmount, uint256 subjectEthAmount, uint256 supply);\\n\\n\\t// SharesSubject => (Holder => Balance)\\n\\tmapping(address => mapping(address => uint256)) public sharesBalance;\\n\\n\\t// SharesSubject => Supply\\n\\tmapping(address => uint256) public sharesSupply;\\n\\n\\tfunction setFeeDestination(address _feeDestination) public onlyOwner {\\n\\t\\tprotocolFeeDestination = _feeDestination;\\n\\t}\\n\\n\\tfunction setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\n\\t\\tprotocolFeePercent = _feePercent;\\n\\t}\\n\\n\\tfunction setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\n\\t\\tsubjectFeePercent = _feePercent;\\n\\t}\\n\\n\\tfunction getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {\\n\\t\\tuint256 sum1 = supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6;\\n\\t\\tuint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6;\\n\\t\\tuint256 summation = sum2 - sum1;\\n\\t\\treturn summation * 1 ether / 16000;\\n\\t}\\n\\n\\tfunction getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\\n\\t\\treturn getPrice(sharesSupply[sharesSubject], amount);\\n\\t}\\n\\n\\tfunction getSellPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\\n\\t\\treturn getPrice(sharesSupply[sharesSubject] - amount, amount);\\n\\t}\\n\\n\\tfunction getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\\n\\t\\tuint256 price = getBuyPrice(sharesSubject, amount);\\n\\t\\tuint256 protocolFee = price * protocolFeePercent / 1 ether;\\n\\t\\tuint256 subjectFee = price * subjectFeePercent / 1 ether;\\n\\t\\treturn price + protocolFee + subjectFee;\\n\\t}\\n\\n\\tfunction getSellPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\\n\\t\\tuint256 price = getSellPrice(sharesSubject, amount);\\n\\t\\tuint256 protocolFee = price * protocolFeePercent / 1 ether;\\n\\t\\tuint256 subjectFee = price * subjectFeePercent / 1 ether;\\n\\t\\treturn price - protocolFee - subjectFee;\\n\\t}\\n\\n\\tfunction buyShares(address sharesSubject, uint256 amount) public payable {\\n\\t\\tuint256 supply = sharesSupply[sharesSubject];\\n\\t\\trequire(supply > 0 || sharesSubject == msg.sender, \\\"Only the shares' subject can buy the first share\\\");\\n\\t\\tuint256 price = getPrice(supply, amount);\\n\\t\\tuint256 protocolFee = price * protocolFeePercent / 1 ether;\\n\\t\\tuint256 subjectFee = price * subjectFeePercent / 1 ether;\\n\\t\\trequire(msg.value >= price + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\n\\t\\tsharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] + amount;\\n\\t\\tsharesSupply[sharesSubject] = supply + amount;\\n\\t\\temit Trade(msg.sender, sharesSubject, true, amount, price, protocolFee, subjectFee, supply + amount);\\n\\t\\t(bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n\\t\\t(bool success2, ) = sharesSubject.call{value: subjectFee}(\\\"\\\");\\n\\t\\trequire(success1 && success2, \\\"Unable to send funds\\\");\\n\\t}\\n\\n\\tfunction sellShares(address sharesSubject, uint256 amount) public payable {\\n\\t\\tuint256 supply = sharesSupply[sharesSubject];\\n\\t\\trequire(supply > amount, \\\"Cannot sell the last share\\\");\\n\\t\\tuint256 price = getPrice(supply - amount, amount);\\n\\t\\tuint256 protocolFee = price * protocolFeePercent / 1 ether;\\n\\t\\tuint256 subjectFee = price * subjectFeePercent / 1 ether;\\n\\t\\trequire(sharesBalance[sharesSubject][msg.sender] >= amount, \\\"Insufficient shares\\\");\\n\\t\\tsharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] - amount;\\n\\t\\tsharesSupply[sharesSubject] = supply - amount;\\n\\t\\temit Trade(msg.sender, sharesSubject, false, amount, price, protocolFee, subjectFee, supply - amount);\\n\\t\\t(bool success1, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\\\"\\\");\\n\\t\\t(bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n\\t\\t(bool success3, ) = sharesSubject.call{value: subjectFee}(\\\"\\\");\\n\\t\\trequire(success1 && success2 && success3, \\\"Unable to send funds\\\");\\n\\t}\\n}\\n\",\"keccak256\":\"0xf10c1900754184f2559f4f70ebb4a5c404af82f42ec11a7aedd859c6b1bec119\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "",
    "devdoc": {
      "kind": "dev",
      "methods": {
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    },
    "storageLayout": {
      "storage": [
        {
          "astId": 7,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "_owner",
          "offset": 0,
          "slot": "0",
          "type": "t_address"
        },
        {
          "astId": 133,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "protocolFeeDestination",
          "offset": 0,
          "slot": "1",
          "type": "t_address"
        },
        {
          "astId": 135,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "protocolFeePercent",
          "offset": 0,
          "slot": "2",
          "type": "t_uint256"
        },
        {
          "astId": 137,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "subjectFeePercent",
          "offset": 0,
          "slot": "3",
          "type": "t_uint256"
        },
        {
          "astId": 161,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "sharesBalance",
          "offset": 0,
          "slot": "4",
          "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
        },
        {
          "astId": 165,
          "contract": "contracts/protocol/FriendtechSharesV1.sol:FriendtechSharesV1",
          "label": "sharesSupply",
          "offset": 0,
          "slot": "5",
          "type": "t_mapping(t_address,t_uint256)"
        }
      ],
      "types": {
        "t_address": {
          "encoding": "inplace",
          "label": "address",
          "numberOfBytes": "20"
        },
        "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => mapping(address => uint256))",
          "numberOfBytes": "32",
          "value": "t_mapping(t_address,t_uint256)"
        },
        "t_mapping(t_address,t_uint256)": {
          "encoding": "mapping",
          "key": "t_address",
          "label": "mapping(address => uint256)",
          "numberOfBytes": "32",
          "value": "t_uint256"
        },
        "t_uint256": {
          "encoding": "inplace",
          "label": "uint256",
          "numberOfBytes": "32"
        }
      }
    }
  }